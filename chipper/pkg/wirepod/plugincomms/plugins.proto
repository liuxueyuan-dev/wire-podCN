syntax = "proto3";

import "google/protobuf/empty.proto";
package plugins;

option go_package = "github.com/kercre123/chipper/pkg/wirepod/plugincomms";

message PluginRequest {
  string intent = 1;
  map<string, string> intent_params = 2;
  string esn = 3;
  string ip = 4;
  string guid = 5;
}

message PluginResponse {
  bool is_running = 1;
  string intent = 2;
  map<string, string> intent_params = 3;
  bool is_knowledge_graph = 4;
  string speech_output = 5;
}

message ConnTestRequest {
  bool test = 1;
}

message ConnTestResponse {
  bool test = 1;
}

message AddPluginRequest {
  uint32 id = 1;
}

message AddPluginResponse {
  bool success = 1;
  string error = 2;
}

message RemovePluginRequest {
  uint32 id = 1;
}

message RemovePluginResponse {
  bool success = 1;
  string error = 2;
}

message ListPluginsResponse {
  repeated uint32 ids = 1 [packed=true];
}

service PluginService {
  // Send a PluginRequest and get a PluginResponse
  rpc ProcessPlugin(PluginRequest) returns (PluginResponse) {}
  rpc ConnTest(ConnTestRequest) returns (ConnTestResponse) {}
  rpc AddPlugin(AddPluginRequest) returns (ConnTestResponse) {}
  rpc RemovePlugin(RemovePluginRequest) returns (RemovePluginResponse) {}
  rpc ListPlugins(google.protobuf.Empty) returns (ListPluginsResponse) {}
}
